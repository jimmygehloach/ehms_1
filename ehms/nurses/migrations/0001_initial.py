# Generated by Django 4.2.1 on 2023-05-23 00:45

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import ehms.nurses.models
import model_utils.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("addresses", "0001_initial"),
        ("medical_sessions", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("patients", "0001_initial"),
        ("hospitals", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Nurse",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="modified"
                    ),
                ),
                (
                    "status",
                    model_utils.fields.StatusField(
                        choices=[("active", "active"), ("inactive", "inactive")],
                        default="active",
                        max_length=100,
                        no_check_for_status=True,
                        verbose_name="status",
                    ),
                ),
                (
                    "status_changed",
                    model_utils.fields.MonitorField(
                        default=django.utils.timezone.now, monitor="status", verbose_name="status changed"
                    ),
                ),
                ("uid", models.CharField(blank=True, max_length=255, unique=True, verbose_name="UID")),
                ("first_name", models.CharField(max_length=100, verbose_name="First Name")),
                ("middle_name", models.CharField(blank=True, max_length=100, verbose_name="Middle Name")),
                ("last_name", models.CharField(blank=True, max_length=100, verbose_name="Last Name")),
                ("date_of_birth", models.DateField(blank=True, null=True, verbose_name="Date of Birth")),
                ("vital_status", models.BooleanField(default=True, verbose_name="Vital status")),
                (
                    "blood_group",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("A Positive", "A Positive"),
                            ("O Positive", "O Positive"),
                            ("B Positive", "B Positive"),
                            ("AB Positive", "AB Positive"),
                            ("A Negative", "A Negative"),
                            ("O Negative", "O Negative"),
                            ("B Negative", "B Negative"),
                            ("AB Negative", "AB Negative"),
                        ],
                        max_length=50,
                        verbose_name="Blood group",
                    ),
                ),
                (
                    "religion",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Islam", "Islam"),
                            ("Christianity", "Christianity"),
                            ("Baha i Faith", "Baha i Faith"),
                            ("African Traditional Faith", "African Traditional Faith"),
                            ("Hinduism", "Hinduism"),
                            ("Buddhism", "Buddhism"),
                            ("Folk religions", "Folk religions"),
                            ("Sikhism", "Sikhism"),
                            ("Judaism", "Judaism"),
                            ("Others", "Others"),
                            ("No Religion", "No Religion"),
                        ],
                        max_length=50,
                        verbose_name="Religion",
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("Male", "Male"), ("Female", "Female"), ("Transgender", "Transgender")],
                        max_length=11,
                        verbose_name="Gender",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=ehms.nurses.models.nurse_image_upload,
                        verbose_name="Nurse Image",
                    ),
                ),
                ("email", models.EmailField(blank=True, max_length=100, null=True, verbose_name="Email")),
                ("remarks", models.TextField(blank=True, verbose_name="Remarks")),
                ("token", models.CharField(blank=True, max_length=8, null=True, verbose_name="Login token")),
                (
                    "token_timestamp",
                    models.DateTimeField(blank=True, default=None, null=True, verbose_name="Token timestamp"),
                ),
                ("verify_token", models.BooleanField(default=False)),
                ("phone", models.CharField(max_length=15, verbose_name="Phone")),
                ("alternate_phone", models.CharField(blank=True, max_length=15, verbose_name="Alternate phone")),
                ("address_line_1", models.CharField(max_length=200, verbose_name="Address Line 1")),
                ("address_line_2", models.CharField(blank=True, max_length=200, verbose_name="Address Line 2")),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="nurse_country",
                        to="addresses.country",
                        verbose_name="Country",
                    ),
                ),
                (
                    "creator_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="nurse_creator_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Logged in user",
                    ),
                ),
                (
                    "district",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="nurse_district",
                        to="addresses.district",
                        verbose_name="District",
                    ),
                ),
            ],
            options={
                "verbose_name": "Nurse",
                "verbose_name_plural": "Nurses",
            },
        ),
        migrations.CreateModel(
            name="VitalSignRecord",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="modified"
                    ),
                ),
                (
                    "status",
                    model_utils.fields.StatusField(
                        choices=[("active", "active"), ("inactive", "inactive")],
                        default="active",
                        max_length=100,
                        no_check_for_status=True,
                        verbose_name="status",
                    ),
                ),
                (
                    "status_changed",
                    model_utils.fields.MonitorField(
                        default=django.utils.timezone.now, monitor="status", verbose_name="status changed"
                    ),
                ),
                ("timings", models.DateTimeField(default=django.utils.timezone.now)),
                ("bed_number", models.CharField(max_length=50)),
                (
                    "pulse",
                    models.PositiveIntegerField(
                        choices=[
                            (0, 0),
                            (180, 180),
                            (170, 170),
                            (160, 160),
                            (150, 150),
                            (140, 140),
                            (130, 130),
                            (120, 120),
                            (110, 110),
                            (100, 100),
                            (90, 90),
                            (80, 80),
                            (70, 70),
                            (60, 60),
                            (50, 50),
                            (40, 40),
                        ],
                        verbose_name="Pulse",
                    ),
                ),
                (
                    "temperature",
                    models.PositiveIntegerField(
                        choices=[
                            (105, 105),
                            (104, 104),
                            (103, 103),
                            (102, 102),
                            (101, 101),
                            (100, 100),
                            (99, 99),
                            (98.6, 98.6),
                            (98, 98),
                            (97, 97),
                            (96, 96),
                            (95, 95),
                        ],
                        help_text="Temperature in Fahrenheit",
                        verbose_name="Temperature",
                    ),
                ),
                (
                    "blood_pressure_systolic",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Systolic mm Hg (upper number)",
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(1000),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                (
                    "blood_pressure_diastolic",
                    models.IntegerField(
                        blank=True,
                        help_text="Diastolic mm Hg (lower number)",
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(1000),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                (
                    "height",
                    models.IntegerField(
                        blank=True,
                        help_text="Height in centimeters",
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(500),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                (
                    "weight",
                    models.IntegerField(
                        blank=True,
                        help_text="Weight in kilograms",
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(1000),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                (
                    "creator_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="vital_sign_record_creator_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Logged in user",
                    ),
                ),
                (
                    "hospital",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="vital_sign_record_hospital",
                        to="hospitals.hospital",
                        verbose_name="Hospital",
                    ),
                ),
                (
                    "medical_session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="vital_sign_record_medical_session",
                        to="medical_sessions.medicalsession",
                        verbose_name="Medical Session",
                    ),
                ),
                (
                    "nurse",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="nurse_vital_sign_record",
                        to="nurses.nurse",
                        verbose_name="Nurse",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="patient_vital_sign_record",
                        to="patients.patient",
                        verbose_name="Patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "Vital Sign Record",
                "verbose_name_plural": "Vital Sign Records",
            },
        ),
        migrations.CreateModel(
            name="NurseNotes",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="modified"
                    ),
                ),
                (
                    "status",
                    model_utils.fields.StatusField(
                        choices=[("active", "active"), ("inactive", "inactive")],
                        default="active",
                        max_length=100,
                        no_check_for_status=True,
                        verbose_name="status",
                    ),
                ),
                (
                    "status_changed",
                    model_utils.fields.MonitorField(
                        default=django.utils.timezone.now, monitor="status", verbose_name="status changed"
                    ),
                ),
                (
                    "timings",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="Date and time when note is taken"
                    ),
                ),
                ("bed_number", models.CharField(max_length=50, verbose_name="Bed Number")),
                (
                    "observation",
                    models.TextField(
                        help_text="Include medication and treatment when indicated",
                        max_length=100000,
                        validators=[ehms.nurses.models.validate_observation_min_length],
                        verbose_name="Observation",
                    ),
                ),
                (
                    "creator_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="nurse_note_creator_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Logged in user",
                    ),
                ),
                (
                    "hospital",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="nurse_note_record_hospital",
                        to="hospitals.hospital",
                        verbose_name="Hospital",
                    ),
                ),
                (
                    "medical_session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="nurse_notes_medical_session",
                        to="medical_sessions.medicalsession",
                        verbose_name="Medical Session",
                    ),
                ),
                (
                    "nurse",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="nurse_note_belong_to_nurse",
                        to="nurses.nurse",
                        verbose_name="Nurse",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="patient_nurse_note",
                        to="patients.patient",
                        verbose_name="Patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "Nurse Note",
                "verbose_name_plural": "Nurse Notes",
            },
        ),
        migrations.CreateModel(
            name="NurseHospital",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="modified"
                    ),
                ),
                (
                    "status",
                    model_utils.fields.StatusField(
                        choices=[("active", "active"), ("inactive", "inactive")],
                        default="active",
                        max_length=100,
                        no_check_for_status=True,
                        verbose_name="status",
                    ),
                ),
                (
                    "status_changed",
                    model_utils.fields.MonitorField(
                        default=django.utils.timezone.now, monitor="status", verbose_name="status changed"
                    ),
                ),
                ("joined_on", models.DateField(verbose_name="Joined on")),
                ("relieved_on", models.DateField(blank=True, null=True, verbose_name="Relieved on")),
                ("designation", models.CharField(blank=True, max_length=50, verbose_name="Designation")),
                ("current_hospital", models.BooleanField(default=False, verbose_name="Current hospital")),
                (
                    "creator_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="nurse_hospital_creator_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Logged in user",
                    ),
                ),
                (
                    "hospital",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT, to="hospitals.hospital", verbose_name="Hospital"
                    ),
                ),
                (
                    "nurse",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="hospital_belong_to_nurse",
                        to="nurses.nurse",
                        verbose_name="Nurse",
                    ),
                ),
            ],
            options={
                "verbose_name": "Nurse Hospital Record",
                "verbose_name_plural": "Nurse Hospital Records",
            },
        ),
        migrations.AddField(
            model_name="nurse",
            name="hospital",
            field=models.ManyToManyField(through="nurses.NurseHospital", to="hospitals.hospital"),
        ),
        migrations.AddField(
            model_name="nurse",
            name="postcode",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT,
                related_name="nurse_postcode",
                to="addresses.postcode",
                verbose_name="PostalCode",
            ),
        ),
        migrations.AddField(
            model_name="nurse",
            name="region",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT,
                related_name="nurse_region",
                to="addresses.region",
                verbose_name="Region",
            ),
        ),
        migrations.AddField(
            model_name="nurse",
            name="town",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT,
                related_name="nurse_town",
                to="addresses.town",
                verbose_name="Town",
            ),
        ),
        migrations.CreateModel(
            name="IntakeOutputChart",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="modified"
                    ),
                ),
                (
                    "status",
                    model_utils.fields.StatusField(
                        choices=[("active", "active"), ("inactive", "inactive")],
                        default="active",
                        max_length=100,
                        no_check_for_status=True,
                        verbose_name="status",
                    ),
                ),
                (
                    "status_changed",
                    model_utils.fields.MonitorField(
                        default=django.utils.timezone.now, monitor="status", verbose_name="status changed"
                    ),
                ),
                ("intake_timings", models.DateTimeField(default=django.utils.timezone.now)),
                ("output_timings", models.DateTimeField(default=django.utils.timezone.now)),
                ("bed_number", models.CharField(max_length=50)),
                (
                    "intake_oral",
                    models.IntegerField(
                        blank=True,
                        help_text="Write the count in digits",
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(1000),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                (
                    "intake_iv_fluids",
                    models.IntegerField(
                        blank=True,
                        help_text="Write the count in digits",
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(1000),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                (
                    "output_urine",
                    models.IntegerField(
                        blank=True,
                        help_text="Write the count in milliliter",
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(1000),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                (
                    "output_vomit",
                    models.IntegerField(
                        blank=True,
                        help_text="Write the count in digits",
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(1000),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                (
                    "output_suction",
                    models.IntegerField(
                        blank=True,
                        help_text="Write the count in digits",
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(1000),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                (
                    "output_drain",
                    models.IntegerField(
                        blank=True,
                        help_text="Write the count in digits",
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(1000),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                (
                    "creator_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="intake_output_chart_creator_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Logged in user",
                    ),
                ),
                (
                    "hospital",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="intake_output_chart_hospital",
                        to="hospitals.hospital",
                        verbose_name="Hospital",
                    ),
                ),
                (
                    "medical_session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="intake_output_chart_medical_session",
                        to="medical_sessions.medicalsession",
                        verbose_name="Medical Session",
                    ),
                ),
                (
                    "nurse",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="nurse_intake_output_chart",
                        to="nurses.nurse",
                        verbose_name="Nurse",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="patient_intake_output_chart",
                        to="patients.patient",
                        verbose_name="Patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "Intake Output Chart",
                "verbose_name_plural": "Intake Output Charts",
            },
        ),
    ]
